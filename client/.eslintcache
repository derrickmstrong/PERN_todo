[{"/Volumes/WD_Programming/Projects/perntodo/client/src/index.js":"1","/Volumes/WD_Programming/Projects/perntodo/client/src/App.js":"2","/Volumes/WD_Programming/Projects/perntodo/client/src/reportWebVitals.js":"3","/Volumes/WD_Programming/Projects/perntodo/client/src/components/InputTodo.js":"4","/Volumes/WD_Programming/Projects/perntodo/client/src/components/ListTodo.js":"5","/Volumes/WD_Programming/Projects/perntodo/client/src/components/EditTodo.js":"6"},{"size":500,"mtime":1609533587000,"results":"7","hashOfConfig":"8"},{"size":326,"mtime":1609537541000,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609533587000,"results":"10","hashOfConfig":"8"},{"size":1362,"mtime":1609537415000,"results":"11","hashOfConfig":"8"},{"size":1720,"mtime":1609546512000,"results":"12","hashOfConfig":"8"},{"size":2783,"mtime":1609546889000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9ffdxu",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/WD_Programming/Projects/perntodo/client/src/index.js",[],"/Volumes/WD_Programming/Projects/perntodo/client/src/App.js",[],["28","29"],"/Volumes/WD_Programming/Projects/perntodo/client/src/reportWebVitals.js",[],"/Volumes/WD_Programming/Projects/perntodo/client/src/components/InputTodo.js",[],"/Volumes/WD_Programming/Projects/perntodo/client/src/components/ListTodo.js",["30"],"import React, { Fragment, useState, useEffect } from 'react';\nimport EditTodo from './EditTodo';\n\nfunction ListTodo() {\n  const [todos, setTodos] = useState([]);\n  //console.log(todos);\n\n  const getTodos = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/todos');\n      const data = await response.json(); // Parse json data\n      setTodos(data);\n      // console.log(data);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n    return () => {};\n  }, [todos]);\n\n  // Delete function\n  const deleteTodo = async (todo_id) => {\n    try {\n      const deleteTodo = await fetch(`http://localhost:5000/todos/${todo_id}`, {\n        method: 'DELETE',\n      });\n    //console.log(deleteTodo);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <table className='table table-hover mt-5 text-center'>\n        <thead>\n          <tr>\n            <th>Description</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {todos\n            .map((todo) => {\n              return (\n                <tr key={todo.todo_id}>\n                  <td>{todo.description}</td>\n                  <td><EditTodo todo={todo} /></td>\n                  <td>\n                    <button className='btn btn-danger'\n                      onClick={() => {\n                        deleteTodo(todo.todo_id);\n                      }}>\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              );\n            })\n            }\n        </tbody>\n      </table>\n    </Fragment>\n  );\n}\n\nexport default ListTodo;\n","/Volumes/WD_Programming/Projects/perntodo/client/src/components/EditTodo.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":27,"column":13,"nodeType":"37","messageId":"38","endLine":27,"endColumn":23},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'deleteTodo' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]